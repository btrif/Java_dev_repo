package OOP_Concepts.LAB_04;

/**
 * Created by Bogdan Trif on 01-05-2017 , 5:32 PM.
 */
public class Main_01 {
    /* variables to describe the character */
    static String name;
    static String description ;
    static int health;
    static int secretWeapon;

    /*Other methods*/
    public static void printInfo(){
        String result =
                "*************************************"+ "\n" +
                        "Name: " + name + "\n" +
                        //to do: include your code for printing the description
                        "Description : " + name + " is " + description + "\n" +
                        "Secret weapon: " + secretWeapon + "\n" +
                        "Health: " + health + "\n" +
                        "*************************************";
        System.out.println(result);
    }


    public static void main(String[] args){
        System.out.println("Setting up the character");
        //todo: Change the values below to represent different characters
        name = "John";
        description = "a good, strong and blonded hair man" ;
        secretWeapon = 5;
        health = 10;
        printInfo();
    }

}

/**
DESCRIBING A Character: Variables and Methods (non graded activity)

Now we will think about some variables and methods to create a program that represents different Characters
 of the Haunting Mansion game (the hero, his allies and his enemies).
 We begin the modeling process introducing only 3 variables:
 a String name to represent the name of our character, an int to represent the power of his secretWeapon
 and an int health to represent the points of health of a character in the game.
 We assume that all characters start the game with 10 points of health.
 These points can be lost during the game, for example, when characters fight against their enemies.
 When a character reaches zero points we can say that he is dead.

We have created also a method called printInfo() that prints in console all the information that we have about the character.

= Select Main file, look carefully the code and try to figure out what it does.
= Click compile button and then run button to see the result.
= Remember to compile again after each change.
= Modify the code to try to answer the questions below.
 If you mess up, you can reload the page and start again as many times as you want.
= Add a new variable String description to provide more information about the character and
 their personal story and modify the method printInfo() to include this information.
= Go to the main method and modify the lines below the sentence System.out.println("Setting up the character")
 to provide information of a different character changing the values of the variables name, health and description.

 = You can see that changing the values of variables every time you want to provide information of a
 different character is not a very swift procedure.
 If we have to create many characters, we will like to have a generic template to build characters
 and a specific procedure to create them. This procedure would need as input,
 the information that changes from one character to another and should produce as output the particular character
 with all its variables and methods.
- This generic template to represent entities (in our case characters) is what we call a Java Class.
- The procedure through which we pass specific information to create a specific character is what we call
 the constructor method.
- Each particular entity (each one of our characters) generated by this method is that in Java called objects
 or instances of a class. For example our hero John could be represented by an instance of the Character class.

 = Follow us to the next exercise and you will discover how to create templates (Java classes)
 and use them to construct different characters (Java objects).

 */